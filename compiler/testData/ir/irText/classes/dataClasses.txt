FILE fqName:<root> fileName:/dataClasses.kt
  CLASS CLASS name:Test1 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Test1 flags:[]
    CONSTRUCTOR visibility:public <> (x:kotlin.Int, y:kotlin.String, z:kotlin.Any) returnType:<root>.Test1 flags:[primary]
      VALUE_PARAMETER name:x index:0 type:kotlin.Int flags:[]
      VALUE_PARAMETER name:y index:1 type:kotlin.String flags:[]
      VALUE_PARAMETER name:z index:2 type:kotlin.Any flags:[]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> <> () flags:[primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Test1 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]'
    PROPERTY name:x visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Int visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'x: kotlin.Int flags:[] declared in <root>.Test1.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:public modality:FINAL <> ($this:<root>.Test1) returnType:kotlin.Int flags:[]
        correspondingProperty: PROPERTY name:x visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.Test1'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Int visibility:public flags:[final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.<get-x>' type=<root>.Test1 origin=null
    PROPERTY name:y visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:y type:kotlin.String visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'y: kotlin.String flags:[] declared in <root>.Test1.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-y> visibility:public modality:FINAL <> ($this:<root>.Test1) returnType:kotlin.String flags:[]
        correspondingProperty: PROPERTY name:y visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-y> <> (): kotlin.String flags:[] declared in <root>.Test1'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:y type:kotlin.String visibility:public flags:[final]' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.<get-y>' type=<root>.Test1 origin=null
    PROPERTY name:z visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:z type:kotlin.Any visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'z: kotlin.Any flags:[] declared in <root>.Test1.<init>' type=kotlin.Any origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-z> visibility:public modality:FINAL <> ($this:<root>.Test1) returnType:kotlin.Any flags:[]
        correspondingProperty: PROPERTY name:z visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-z> <> (): kotlin.Any flags:[] declared in <root>.Test1'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z type:kotlin.Any visibility:public flags:[final]' type=kotlin.Any origin=null
              receiver: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.<get-z>' type=<root>.Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL <> ($this:<root>.Test1) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 <> (): kotlin.Int flags:[] declared in <root>.Test1'
          CALL 'public final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.Test1' type=kotlin.Int origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.component1' type=<root>.Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component2 visibility:public modality:FINAL <> ($this:<root>.Test1) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component2 <> (): kotlin.String flags:[] declared in <root>.Test1'
          CALL 'public final fun <get-y> <> (): kotlin.String flags:[] declared in <root>.Test1' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.component2' type=<root>.Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component3 visibility:public modality:FINAL <> ($this:<root>.Test1) returnType:kotlin.Any flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component3 <> (): kotlin.Any flags:[] declared in <root>.Test1'
          CALL 'public final fun <get-z> <> (): kotlin.Any flags:[] declared in <root>.Test1' type=kotlin.Any origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.component3' type=<root>.Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL <> ($this:<root>.Test1, x:kotlin.Int, y:kotlin.String, z:kotlin.Any) returnType:<root>.Test1 flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
      VALUE_PARAMETER name:x index:0 type:kotlin.Int flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.Test1' type=kotlin.Int origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.copy' type=<root>.Test1 origin=null
      VALUE_PARAMETER name:y index:1 type:kotlin.String flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-y> <> (): kotlin.String flags:[] declared in <root>.Test1' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.copy' type=<root>.Test1 origin=null
      VALUE_PARAMETER name:z index:2 type:kotlin.Any flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-z> <> (): kotlin.Any flags:[] declared in <root>.Test1' type=kotlin.Any origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.copy' type=<root>.Test1 origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy <> (x: kotlin.Int, y: kotlin.String, z: kotlin.Any): <root>.Test1 flags:[] declared in <root>.Test1'
          CALL 'public constructor <init> <> (x: kotlin.Int, y: kotlin.String, z: kotlin.Any) flags:[primary] declared in <root>.Test1' type=<root>.Test1 origin=null
            x: GET_VAR 'x: kotlin.Int flags:[] declared in <root>.Test1.copy' type=kotlin.Int origin=null
            y: GET_VAR 'y: kotlin.String flags:[] declared in <root>.Test1.copy' type=kotlin.String origin=null
            z: GET_VAR 'z: kotlin.Any flags:[] declared in <root>.Test1.copy' type=kotlin.Any origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:<root>.Test1) returnType:kotlin.String flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString <> (): kotlin.String flags:[] declared in <root>.Test1'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="Test1("
            CONST String type=kotlin.String value="x="
            CALL 'public final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.Test1' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.toString' type=<root>.Test1 origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="y="
            CALL 'public final fun <get-y> <> (): kotlin.String flags:[] declared in <root>.Test1' type=kotlin.String origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.toString' type=<root>.Test1 origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="z="
            CALL 'public final fun <get-z> <> (): kotlin.Any flags:[] declared in <root>.Test1' type=kotlin.Any origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.toString' type=<root>.Test1 origin=null
            CONST String type=kotlin.String value=")"
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:<root>.Test1) returnType:kotlin.Int flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp0_result type:kotlin.Int flags:[var]
          CONST Int type=kotlin.Int value=0
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test1.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: CALL 'public final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.Test1' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.hashCode' type=<root>.Test1 origin=null
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test1.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public final fun plus <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: CALL 'public final fun times <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test1.hashCode' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=31
            other: CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.String' type=kotlin.Int origin=null
              $this: CALL 'public final fun <get-y> <> (): kotlin.String flags:[] declared in <root>.Test1' type=kotlin.String origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.hashCode' type=<root>.Test1 origin=null
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test1.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public final fun plus <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: CALL 'public final fun times <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test1.hashCode' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=31
            other: CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.Any' type=kotlin.Int origin=null
              $this: CALL 'public final fun <get-z> <> (): kotlin.Any flags:[] declared in <root>.Test1' type=kotlin.Any origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.hashCode' type=<root>.Test1 origin=null
        RETURN type=kotlin.Nothing from='public open fun hashCode <> (): kotlin.Int flags:[] declared in <root>.Test1'
          GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test1.hashCode' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:<root>.Test1, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test1 flags:[]
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:[]
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.equals' type=<root>.Test1 origin=null
              arg1: GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test1.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test1'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.Test1
              typeOperand: CLASS CLASS name:Test1 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
              GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test1.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test1'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Test1 flags:[val]
          TYPE_OP type=<root>.Test1 origin=CAST typeOperand=<root>.Test1
            typeOperand: CLASS CLASS name:Test1 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
            GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test1.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.Test1' type=kotlin.Int origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.equals' type=<root>.Test1 origin=null
                arg1: CALL 'public final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.Test1' type=kotlin.Int origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test1 flags:[val] declared in <root>.Test1.equals' type=<root>.Test1 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test1'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-y> <> (): kotlin.String flags:[] declared in <root>.Test1' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.equals' type=<root>.Test1 origin=null
                arg1: CALL 'public final fun <get-y> <> (): kotlin.String flags:[] declared in <root>.Test1' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test1 flags:[val] declared in <root>.Test1.equals' type=<root>.Test1 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test1'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-z> <> (): kotlin.Any flags:[] declared in <root>.Test1' type=kotlin.Any origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test1 flags:[] declared in <root>.Test1.equals' type=<root>.Test1 origin=null
                arg1: CALL 'public final fun <get-z> <> (): kotlin.Any flags:[] declared in <root>.Test1' type=kotlin.Any origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test1 flags:[val] declared in <root>.Test1.equals' type=<root>.Test1 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test1'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test1'
          CONST Boolean type=kotlin.Boolean value=true
  CLASS CLASS name:Test2 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Test2 flags:[]
    CONSTRUCTOR visibility:public <> (x:kotlin.Any?) returnType:<root>.Test2 flags:[primary]
      VALUE_PARAMETER name:x index:0 type:kotlin.Any? flags:[]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> <> () flags:[primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Test2 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]'
    PROPERTY name:x visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Any? visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'x: kotlin.Any? flags:[] declared in <root>.Test2.<init>' type=kotlin.Any? origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:public modality:FINAL <> ($this:<root>.Test2) returnType:kotlin.Any? flags:[]
        correspondingProperty: PROPERTY name:x visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test2 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-x> <> (): kotlin.Any? flags:[] declared in <root>.Test2'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Any? visibility:public flags:[final]' type=kotlin.Any? origin=null
              receiver: GET_VAR '<this>: <root>.Test2 flags:[] declared in <root>.Test2.<get-x>' type=<root>.Test2 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL <> ($this:<root>.Test2) returnType:kotlin.Any? flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test2 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 <> (): kotlin.Any? flags:[] declared in <root>.Test2'
          CALL 'public final fun <get-x> <> (): kotlin.Any? flags:[] declared in <root>.Test2' type=kotlin.Any? origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test2 flags:[] declared in <root>.Test2.component1' type=<root>.Test2 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL <> ($this:<root>.Test2, x:kotlin.Any?) returnType:<root>.Test2 flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test2 flags:[]
      VALUE_PARAMETER name:x index:0 type:kotlin.Any? flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-x> <> (): kotlin.Any? flags:[] declared in <root>.Test2' type=kotlin.Any? origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test2 flags:[] declared in <root>.Test2.copy' type=<root>.Test2 origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy <> (x: kotlin.Any?): <root>.Test2 flags:[] declared in <root>.Test2'
          CALL 'public constructor <init> <> (x: kotlin.Any?) flags:[primary] declared in <root>.Test2' type=<root>.Test2 origin=null
            x: GET_VAR 'x: kotlin.Any? flags:[] declared in <root>.Test2.copy' type=kotlin.Any? origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:<root>.Test2) returnType:kotlin.String flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test2 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString <> (): kotlin.String flags:[] declared in <root>.Test2'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="Test2("
            CONST String type=kotlin.String value="x="
            CALL 'public final fun <get-x> <> (): kotlin.Any? flags:[] declared in <root>.Test2' type=kotlin.Any? origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test2 flags:[] declared in <root>.Test2.toString' type=<root>.Test2 origin=null
            CONST String type=kotlin.String value=")"
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:<root>.Test2) returnType:kotlin.Int flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test2 flags:[]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp0_result type:kotlin.Int flags:[var]
          CONST Int type=kotlin.Int value=0
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test2.hashCode' type=kotlin.Unit origin=EQ
          BLOCK type=kotlin.Int origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp1 type:kotlin.Any? flags:[val]
              CALL 'public final fun <get-x> <> (): kotlin.Any? flags:[] declared in <root>.Test2' type=kotlin.Any? origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.Test2 flags:[] declared in <root>.Test2.hashCode' type=<root>.Test2 origin=null
            WHEN type=kotlin.Int origin=null
              BRANCH
                if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'val tmp1: kotlin.Any? flags:[val] declared in <root>.Test2.hashCode' type=kotlin.Any? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CONST Int type=kotlin.Int value=0
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.Any' type=kotlin.Int origin=null
                  $this: GET_VAR 'val tmp1: kotlin.Any? flags:[val] declared in <root>.Test2.hashCode' type=kotlin.Any? origin=null
        RETURN type=kotlin.Nothing from='public open fun hashCode <> (): kotlin.Int flags:[] declared in <root>.Test2'
          GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test2.hashCode' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:<root>.Test2, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test2 flags:[]
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:[]
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR '<this>: <root>.Test2 flags:[] declared in <root>.Test2.equals' type=<root>.Test2 origin=null
              arg1: GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test2.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test2'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.Test2
              typeOperand: CLASS CLASS name:Test2 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
              GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test2.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test2'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Test2 flags:[val]
          TYPE_OP type=<root>.Test2 origin=CAST typeOperand=<root>.Test2
            typeOperand: CLASS CLASS name:Test2 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
            GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test2.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-x> <> (): kotlin.Any? flags:[] declared in <root>.Test2' type=kotlin.Any? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test2 flags:[] declared in <root>.Test2.equals' type=<root>.Test2 origin=null
                arg1: CALL 'public final fun <get-x> <> (): kotlin.Any? flags:[] declared in <root>.Test2' type=kotlin.Any? origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test2 flags:[val] declared in <root>.Test2.equals' type=<root>.Test2 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test2'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test2'
          CONST Boolean type=kotlin.Boolean value=true
  CLASS CLASS name:Test3 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Test3 flags:[]
    CONSTRUCTOR visibility:public <> (d:kotlin.Double, dn:kotlin.Double?, f:kotlin.Float, df:kotlin.Float?) returnType:<root>.Test3 flags:[primary]
      VALUE_PARAMETER name:d index:0 type:kotlin.Double flags:[]
      VALUE_PARAMETER name:dn index:1 type:kotlin.Double? flags:[]
      VALUE_PARAMETER name:f index:2 type:kotlin.Float flags:[]
      VALUE_PARAMETER name:df index:3 type:kotlin.Float? flags:[]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> <> () flags:[primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Test3 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]'
    PROPERTY name:d visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:d type:kotlin.Double visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'd: kotlin.Double flags:[] declared in <root>.Test3.<init>' type=kotlin.Double origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-d> visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Double flags:[]
        correspondingProperty: PROPERTY name:d visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-d> <> (): kotlin.Double flags:[] declared in <root>.Test3'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:d type:kotlin.Double visibility:public flags:[final]' type=kotlin.Double origin=null
              receiver: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.<get-d>' type=<root>.Test3 origin=null
    PROPERTY name:dn visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:dn type:kotlin.Double? visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'dn: kotlin.Double? flags:[] declared in <root>.Test3.<init>' type=kotlin.Double? origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-dn> visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Double? flags:[]
        correspondingProperty: PROPERTY name:dn visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-dn> <> (): kotlin.Double? flags:[] declared in <root>.Test3'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:dn type:kotlin.Double? visibility:public flags:[final]' type=kotlin.Double? origin=null
              receiver: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.<get-dn>' type=<root>.Test3 origin=null
    PROPERTY name:f visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:f type:kotlin.Float visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'f: kotlin.Float flags:[] declared in <root>.Test3.<init>' type=kotlin.Float origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-f> visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Float flags:[]
        correspondingProperty: PROPERTY name:f visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-f> <> (): kotlin.Float flags:[] declared in <root>.Test3'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:f type:kotlin.Float visibility:public flags:[final]' type=kotlin.Float origin=null
              receiver: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.<get-f>' type=<root>.Test3 origin=null
    PROPERTY name:df visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:df type:kotlin.Float? visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'df: kotlin.Float? flags:[] declared in <root>.Test3.<init>' type=kotlin.Float? origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df> visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Float? flags:[]
        correspondingProperty: PROPERTY name:df visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-df> <> (): kotlin.Float? flags:[] declared in <root>.Test3'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df type:kotlin.Float? visibility:public flags:[final]' type=kotlin.Float? origin=null
              receiver: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.<get-df>' type=<root>.Test3 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Double flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 <> (): kotlin.Double flags:[] declared in <root>.Test3'
          CALL 'public final fun <get-d> <> (): kotlin.Double flags:[] declared in <root>.Test3' type=kotlin.Double origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.component1' type=<root>.Test3 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component2 visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Double? flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component2 <> (): kotlin.Double? flags:[] declared in <root>.Test3'
          CALL 'public final fun <get-dn> <> (): kotlin.Double? flags:[] declared in <root>.Test3' type=kotlin.Double? origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.component2' type=<root>.Test3 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component3 visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Float flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component3 <> (): kotlin.Float flags:[] declared in <root>.Test3'
          CALL 'public final fun <get-f> <> (): kotlin.Float flags:[] declared in <root>.Test3' type=kotlin.Float origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.component3' type=<root>.Test3 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component4 visibility:public modality:FINAL <> ($this:<root>.Test3) returnType:kotlin.Float? flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component4 <> (): kotlin.Float? flags:[] declared in <root>.Test3'
          CALL 'public final fun <get-df> <> (): kotlin.Float? flags:[] declared in <root>.Test3' type=kotlin.Float? origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.component4' type=<root>.Test3 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL <> ($this:<root>.Test3, d:kotlin.Double, dn:kotlin.Double?, f:kotlin.Float, df:kotlin.Float?) returnType:<root>.Test3 flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      VALUE_PARAMETER name:d index:0 type:kotlin.Double flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-d> <> (): kotlin.Double flags:[] declared in <root>.Test3' type=kotlin.Double origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.copy' type=<root>.Test3 origin=null
      VALUE_PARAMETER name:dn index:1 type:kotlin.Double? flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-dn> <> (): kotlin.Double? flags:[] declared in <root>.Test3' type=kotlin.Double? origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.copy' type=<root>.Test3 origin=null
      VALUE_PARAMETER name:f index:2 type:kotlin.Float flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-f> <> (): kotlin.Float flags:[] declared in <root>.Test3' type=kotlin.Float origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.copy' type=<root>.Test3 origin=null
      VALUE_PARAMETER name:df index:3 type:kotlin.Float? flags:[]
        EXPRESSION_BODY
          CALL 'public final fun <get-df> <> (): kotlin.Float? flags:[] declared in <root>.Test3' type=kotlin.Float? origin=GET_PROPERTY
            $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.copy' type=<root>.Test3 origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy <> (d: kotlin.Double, dn: kotlin.Double?, f: kotlin.Float, df: kotlin.Float?): <root>.Test3 flags:[] declared in <root>.Test3'
          CALL 'public constructor <init> <> (d: kotlin.Double, dn: kotlin.Double?, f: kotlin.Float, df: kotlin.Float?) flags:[primary] declared in <root>.Test3' type=<root>.Test3 origin=null
            d: GET_VAR 'd: kotlin.Double flags:[] declared in <root>.Test3.copy' type=kotlin.Double origin=null
            dn: GET_VAR 'dn: kotlin.Double? flags:[] declared in <root>.Test3.copy' type=kotlin.Double? origin=null
            f: GET_VAR 'f: kotlin.Float flags:[] declared in <root>.Test3.copy' type=kotlin.Float origin=null
            df: GET_VAR 'df: kotlin.Float? flags:[] declared in <root>.Test3.copy' type=kotlin.Float? origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:<root>.Test3) returnType:kotlin.String flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString <> (): kotlin.String flags:[] declared in <root>.Test3'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="Test3("
            CONST String type=kotlin.String value="d="
            CALL 'public final fun <get-d> <> (): kotlin.Double flags:[] declared in <root>.Test3' type=kotlin.Double origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.toString' type=<root>.Test3 origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="dn="
            CALL 'public final fun <get-dn> <> (): kotlin.Double? flags:[] declared in <root>.Test3' type=kotlin.Double? origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.toString' type=<root>.Test3 origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="f="
            CALL 'public final fun <get-f> <> (): kotlin.Float flags:[] declared in <root>.Test3' type=kotlin.Float origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.toString' type=<root>.Test3 origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="df="
            CALL 'public final fun <get-df> <> (): kotlin.Float? flags:[] declared in <root>.Test3' type=kotlin.Float? origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.toString' type=<root>.Test3 origin=null
            CONST String type=kotlin.String value=")"
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:<root>.Test3) returnType:kotlin.Int flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp0_result type:kotlin.Int flags:[var]
          CONST Int type=kotlin.Int value=0
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.Double' type=kotlin.Int origin=null
            $this: CALL 'public final fun <get-d> <> (): kotlin.Double flags:[] declared in <root>.Test3' type=kotlin.Double origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.hashCode' type=<root>.Test3 origin=null
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public final fun plus <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: CALL 'public final fun times <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=31
            other: BLOCK type=kotlin.Int origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp1 type:kotlin.Double? flags:[val]
                CALL 'public final fun <get-dn> <> (): kotlin.Double? flags:[] declared in <root>.Test3' type=kotlin.Double? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.hashCode' type=<root>.Test3 origin=null
              WHEN type=kotlin.Int origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp1: kotlin.Double? flags:[val] declared in <root>.Test3.hashCode' type=kotlin.Double? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONST Int type=kotlin.Int value=0
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.Double' type=kotlin.Int origin=null
                    $this: GET_VAR 'val tmp1: kotlin.Double? flags:[val] declared in <root>.Test3.hashCode' type=kotlin.Double? origin=null
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public final fun plus <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: CALL 'public final fun times <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=31
            other: CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.Float' type=kotlin.Int origin=null
              $this: CALL 'public final fun <get-f> <> (): kotlin.Float flags:[] declared in <root>.Test3' type=kotlin.Float origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.hashCode' type=<root>.Test3 origin=null
        SET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public final fun plus <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: CALL 'public final fun times <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=31
            other: BLOCK type=kotlin.Int origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp2 type:kotlin.Float? flags:[val]
                CALL 'public final fun <get-df> <> (): kotlin.Float? flags:[] declared in <root>.Test3' type=kotlin.Float? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.hashCode' type=<root>.Test3 origin=null
              WHEN type=kotlin.Int origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp2: kotlin.Float? flags:[val] declared in <root>.Test3.hashCode' type=kotlin.Float? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONST Int type=kotlin.Int value=0
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.Float' type=kotlin.Int origin=null
                    $this: GET_VAR 'val tmp2: kotlin.Float? flags:[val] declared in <root>.Test3.hashCode' type=kotlin.Float? origin=null
        RETURN type=kotlin.Nothing from='public open fun hashCode <> (): kotlin.Int flags:[] declared in <root>.Test3'
          GET_VAR 'var tmp0_result: kotlin.Int flags:[var] declared in <root>.Test3.hashCode' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:<root>.Test3, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.Test3 flags:[]
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:[]
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
              arg1: GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test3.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test3'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.Test3
              typeOperand: CLASS CLASS name:Test3 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
              GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test3.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test3'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Test3 flags:[val]
          TYPE_OP type=<root>.Test3 origin=CAST typeOperand=<root>.Test3
            typeOperand: CLASS CLASS name:Test3 modality:FINAL visibility:public flags:[data] superTypes:[kotlin.Any]
            GET_VAR 'other: kotlin.Any? flags:[] declared in <root>.Test3.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-d> <> (): kotlin.Double flags:[] declared in <root>.Test3' type=kotlin.Double origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
                arg1: CALL 'public final fun <get-d> <> (): kotlin.Double flags:[] declared in <root>.Test3' type=kotlin.Double origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test3 flags:[val] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test3'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-dn> <> (): kotlin.Double? flags:[] declared in <root>.Test3' type=kotlin.Double? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
                arg1: CALL 'public final fun <get-dn> <> (): kotlin.Double? flags:[] declared in <root>.Test3' type=kotlin.Double? origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test3 flags:[val] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test3'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-f> <> (): kotlin.Float flags:[] declared in <root>.Test3' type=kotlin.Float origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
                arg1: CALL 'public final fun <get-f> <> (): kotlin.Float flags:[] declared in <root>.Test3' type=kotlin.Float origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test3 flags:[val] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test3'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun NOT <> (arg0: kotlin.Boolean): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL 'public final fun <get-df> <> (): kotlin.Float? flags:[] declared in <root>.Test3' type=kotlin.Float? origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.Test3 flags:[] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
                arg1: CALL 'public final fun <get-df> <> (): kotlin.Float? flags:[] declared in <root>.Test3' type=kotlin.Float? origin=GET_PROPERTY
                  $this: GET_VAR 'val tmp0_other_with_cast: <root>.Test3 flags:[val] declared in <root>.Test3.equals' type=<root>.Test3 origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test3'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in <root>.Test3'
          CONST Boolean type=kotlin.Boolean value=true
