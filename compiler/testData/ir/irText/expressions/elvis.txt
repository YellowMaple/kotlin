FILE fqName:<root> fileName:/elvis.kt
  PROPERTY name:p visibility:public modality:FINAL flags:[val]
    FIELD PROPERTY_BACKING_FIELD name:p type:kotlin.Any? visibility:public flags:[final,static]
      EXPRESSION_BODY
        CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-p> visibility:public modality:FINAL <> () returnType:kotlin.Any? flags:[]
      correspondingProperty: PROPERTY name:p visibility:public modality:FINAL flags:[val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-p> <> (): kotlin.Any? flags:[] declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:p type:kotlin.Any? visibility:public flags:[final,static]' type=kotlin.Any? origin=null
  FUN name:foo visibility:public modality:FINAL <> () returnType:kotlin.Any? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun foo <> (): kotlin.Any? flags:[] declared in <root>'
        CONST Null type=kotlin.Nothing? value=null
  FUN name:test1 visibility:public modality:FINAL <> (a:kotlin.Any?, b:kotlin.Any) returnType:kotlin.Any flags:[]
    VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:[]
    VALUE_PARAMETER name:b index:1 type:kotlin.Any flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test1 <> (a: kotlin.Any?, b: kotlin.Any): kotlin.Any flags:[] declared in <root>'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:[val]
            GET_VAR 'a: kotlin.Any? flags:[] declared in <root>.test1' type=kotlin.Any? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test1' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'b: kotlin.Any flags:[] declared in <root>.test1' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test1' type=kotlin.Any? origin=null
  FUN name:test2 visibility:public modality:FINAL <> (a:kotlin.String?, b:kotlin.Any) returnType:kotlin.Any flags:[]
    VALUE_PARAMETER name:a index:0 type:kotlin.String? flags:[]
    VALUE_PARAMETER name:b index:1 type:kotlin.Any flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test2 <> (a: kotlin.String?, b: kotlin.Any): kotlin.Any flags:[] declared in <root>'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.String? flags:[val]
            GET_VAR 'a: kotlin.String? flags:[] declared in <root>.test2' type=kotlin.String? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_elvis_lhs: kotlin.String? flags:[val] declared in <root>.test2' type=kotlin.String? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'b: kotlin.Any flags:[] declared in <root>.test2' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'val tmp0_elvis_lhs: kotlin.String? flags:[val] declared in <root>.test2' type=kotlin.String? origin=null
  FUN name:test3 visibility:public modality:FINAL <> (a:kotlin.Any?, b:kotlin.Any?) returnType:kotlin.String flags:[]
    VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:[]
    VALUE_PARAMETER name:b index:1 type:kotlin.Any? flags:[]
    BLOCK_BODY
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=kotlin.String
            typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags:[] superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
            GET_VAR 'b: kotlin.Any? flags:[] declared in <root>.test3' type=kotlin.Any? origin=null
          then: RETURN type=kotlin.Nothing from='public final fun test3 <> (a: kotlin.Any?, b: kotlin.Any?): kotlin.String flags:[] declared in <root>'
            CONST String type=kotlin.String value=""
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=kotlin.String?
            typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags:[] superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
            GET_VAR 'a: kotlin.Any? flags:[] declared in <root>.test3' type=kotlin.Any? origin=null
          then: RETURN type=kotlin.Nothing from='public final fun test3 <> (a: kotlin.Any?, b: kotlin.Any?): kotlin.String flags:[] declared in <root>'
            CONST String type=kotlin.String value=""
      RETURN type=kotlin.Nothing from='public final fun test3 <> (a: kotlin.Any?, b: kotlin.Any?): kotlin.String flags:[] declared in <root>'
        BLOCK type=kotlin.String origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:[val]
            GET_VAR 'a: kotlin.Any? flags:[] declared in <root>.test3' type=kotlin.Any? origin=null
          WHEN type=kotlin.String origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test3' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: TYPE_OP type=kotlin.String origin=IMPLICIT_CAST typeOperand=kotlin.String
                typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags:[] superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
                GET_VAR 'b: kotlin.Any? flags:[] declared in <root>.test3' type=kotlin.Any? origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: TYPE_OP type=kotlin.String origin=IMPLICIT_CAST typeOperand=kotlin.String
                typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags:[] superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
                GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test3' type=kotlin.Any? origin=null
  FUN name:test4 visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Any flags:[]
    VALUE_PARAMETER name:x index:0 type:kotlin.Any flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test4 <> (x: kotlin.Any): kotlin.Any flags:[] declared in <root>'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:[val]
            CALL 'public final fun <get-p> <> (): kotlin.Any? flags:[] declared in <root>' type=kotlin.Any? origin=GET_PROPERTY
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test4' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'x: kotlin.Any flags:[] declared in <root>.test4' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test4' type=kotlin.Any? origin=null
  FUN name:test5 visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Any flags:[]
    VALUE_PARAMETER name:x index:0 type:kotlin.Any flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test5 <> (x: kotlin.Any): kotlin.Any flags:[] declared in <root>'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:[val]
            CALL 'public final fun foo <> (): kotlin.Any? flags:[] declared in <root>' type=kotlin.Any? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test5' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'x: kotlin.Any flags:[] declared in <root>.test5' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'val tmp0_elvis_lhs: kotlin.Any? flags:[val] declared in <root>.test5' type=kotlin.Any? origin=null
