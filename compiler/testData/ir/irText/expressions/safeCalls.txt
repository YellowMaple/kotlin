FILE fqName:<root> fileName:/safeCalls.kt
  CLASS CLASS name:Ref modality:FINAL visibility:public flags:[] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Ref flags:[]
    CONSTRUCTOR visibility:public <> (value:kotlin.Int) returnType:<root>.Ref flags:[primary]
      VALUE_PARAMETER name:value index:0 type:kotlin.Int flags:[]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> <> () flags:[primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Ref modality:FINAL visibility:public flags:[] superTypes:[kotlin.Any]'
    PROPERTY name:value visibility:public modality:FINAL flags:[var]
      FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:public flags:[]
        EXPRESSION_BODY
          GET_VAR 'value: kotlin.Int flags:[] declared in <root>.Ref.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:public modality:FINAL <> ($this:<root>.Ref) returnType:kotlin.Int flags:[]
        correspondingProperty: PROPERTY name:value visibility:public modality:FINAL flags:[var]
        $this: VALUE_PARAMETER name:<this> type:<root>.Ref flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-value> <> (): kotlin.Int flags:[] declared in <root>.Ref'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:public flags:[]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.Ref flags:[] declared in <root>.Ref.<get-value>' type=<root>.Ref origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-value> visibility:public modality:FINAL <> ($this:<root>.Ref, <set-?>:kotlin.Int) returnType:kotlin.Unit flags:[]
        correspondingProperty: PROPERTY name:value visibility:public modality:FINAL flags:[var]
        $this: VALUE_PARAMETER name:<this> type:<root>.Ref flags:[]
        VALUE_PARAMETER name:<set-?> index:0 type:kotlin.Int flags:[]
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:public flags:[]' type=kotlin.Unit origin=null
            receiver: GET_VAR '<this>: <root>.Ref flags:[] declared in <root>.Ref.<set-value>' type=<root>.Ref origin=null
            value: GET_VAR '<set-?>: kotlin.Int flags:[] declared in <root>.Ref.<set-value>' type=kotlin.Int origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:[]
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
  CLASS INTERFACE name:IHost modality:ABSTRACT visibility:public flags:[] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.IHost flags:[]
    FUN name:extLength visibility:public modality:OPEN <> ($this:<root>.IHost, $receiver:kotlin.String) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.IHost flags:[]
      $receiver: VALUE_PARAMETER name:<this> type:kotlin.String flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun extLength <> (): kotlin.Int flags:[] declared in <root>.IHost'
          CALL 'public open fun <get-length> <> (): kotlin.Int flags:[] declared in kotlin.String' type=kotlin.Int origin=GET_PROPERTY
            $this: GET_VAR '<this>: kotlin.String flags:[] declared in <root>.IHost.extLength' type=kotlin.String origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:[]
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
  FUN name:test1 visibility:public modality:FINAL <> (x:kotlin.String?) returnType:kotlin.Int? flags:[]
    VALUE_PARAMETER name:x index:0 type:kotlin.String? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test1 <> (x: kotlin.String?): kotlin.Int? flags:[] declared in <root>'
        BLOCK type=kotlin.Int? origin=SAFE_CALL
          VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? flags:[val]
            GET_VAR 'x: kotlin.String? flags:[] declared in <root>.test1' type=kotlin.String? origin=null
          WHEN type=kotlin.Int? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test1' type=kotlin.String? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public open fun <get-length> <> (): kotlin.Int flags:[] declared in kotlin.String' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test1' type=kotlin.String? origin=null
  FUN name:test2 visibility:public modality:FINAL <> (x:kotlin.String?) returnType:kotlin.Int? flags:[]
    VALUE_PARAMETER name:x index:0 type:kotlin.String? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test2 <> (x: kotlin.String?): kotlin.Int? flags:[] declared in <root>'
        BLOCK type=kotlin.Int? origin=SAFE_CALL
          VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? flags:[val]
            GET_VAR 'x: kotlin.String? flags:[] declared in <root>.test2' type=kotlin.String? origin=null
          WHEN type=kotlin.Int? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test2' type=kotlin.String? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public open fun hashCode <> (): kotlin.Int flags:[] declared in kotlin.String' type=kotlin.Int origin=null
                $this: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test2' type=kotlin.String? origin=null
  FUN name:test3 visibility:public modality:FINAL <> (x:kotlin.String?, y:kotlin.Any?) returnType:kotlin.Boolean? flags:[]
    VALUE_PARAMETER name:x index:0 type:kotlin.String? flags:[]
    VALUE_PARAMETER name:y index:1 type:kotlin.Any? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test3 <> (x: kotlin.String?, y: kotlin.Any?): kotlin.Boolean? flags:[] declared in <root>'
        BLOCK type=kotlin.Boolean? origin=SAFE_CALL
          VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? flags:[val]
            GET_VAR 'x: kotlin.String? flags:[] declared in <root>.test3' type=kotlin.String? origin=null
          WHEN type=kotlin.Boolean? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test3' type=kotlin.String? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public open fun equals <> (other: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.String' type=kotlin.Boolean origin=null
                $this: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test3' type=kotlin.String? origin=null
                other: GET_VAR 'y: kotlin.Any? flags:[] declared in <root>.test3' type=kotlin.Any? origin=null
  FUN name:test4 visibility:public modality:FINAL <> (x:<root>.Ref?) returnType:kotlin.Unit flags:[]
    VALUE_PARAMETER name:x index:0 type:<root>.Ref? flags:[]
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<root>.Ref? flags:[val]
          GET_VAR 'x: <root>.Ref? flags:[] declared in <root>.test4' type=<root>.Ref? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'val tmp0_safe_receiver: <root>.Ref? flags:[val] declared in <root>.test4' type=<root>.Ref? origin=null
              arg1: CONST Null type=kotlin.Nothing? value=null
            then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
              typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public flags:[] superTypes:[kotlin.Any]
              CONST Null type=kotlin.Nothing? value=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CALL 'public final fun <set-value> <> (<set-?>: kotlin.Int): kotlin.Unit flags:[] declared in <root>.Ref' type=kotlin.Unit origin=EQ
              $this: GET_VAR 'val tmp0_safe_receiver: <root>.Ref? flags:[val] declared in <root>.test4' type=<root>.Ref? origin=null
              <set-?>: CONST Int type=kotlin.Int value=0
  FUN name:test5 visibility:public modality:FINAL <> ($receiver:<root>.IHost, s:kotlin.String?) returnType:kotlin.Int? flags:[]
    $receiver: VALUE_PARAMETER name:<this> type:<root>.IHost flags:[]
    VALUE_PARAMETER name:s index:0 type:kotlin.String? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun test5 <> (s: kotlin.String?): kotlin.Int? flags:[] declared in <root>'
        BLOCK type=kotlin.Int? origin=SAFE_CALL
          VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? flags:[val]
            GET_VAR 's: kotlin.String? flags:[] declared in <root>.test5' type=kotlin.String? origin=null
          WHEN type=kotlin.Int? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test5' type=kotlin.String? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public open fun extLength <> (): kotlin.Int flags:[] declared in <root>.IHost' type=kotlin.Int origin=null
                $this: GET_VAR '<this>: <root>.IHost flags:[] declared in <root>.test5' type=<root>.IHost origin=null
                $receiver: GET_VAR 'val tmp0_safe_receiver: kotlin.String? flags:[val] declared in <root>.test5' type=kotlin.String? origin=null
  FUN name:foo visibility:public modality:FINAL <> ($receiver:kotlin.Int) returnType:kotlin.Int flags:[]
    $receiver: VALUE_PARAMETER name:<this> type:kotlin.Int flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun foo <> (): kotlin.Int flags:[] declared in <root>'
        CONST Int type=kotlin.Int value=239
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.Unit flags:[]
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public flags:[] superTypes:[kotlin.Any]
        BLOCK type=kotlin.Int? origin=SAFE_CALL
          VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.Int flags:[val]
            CONST Int type=kotlin.Int value=42
          WHEN type=kotlin.Int? origin=null
            BRANCH
              if: CALL 'public final fun EQEQ <> (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean flags:[] declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.Int flags:[val] declared in <root>.box' type=kotlin.Int origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun foo <> (): kotlin.Int flags:[] declared in <root>' type=kotlin.Int origin=null
                $receiver: GET_VAR 'val tmp0_safe_receiver: kotlin.Int flags:[val] declared in <root>.box' type=kotlin.Int origin=null
