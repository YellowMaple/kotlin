FILE fqName:<root> fileName:/localDelegatedProperties.kt
  FUN name:test1 visibility:public modality:FINAL <> () returnType:kotlin.Unit flags:[]
    BLOCK_BODY
      LOCAL_DELEGATED_PROPERTY name:x type:kotlin.Int flags:val
        VAR DELEGATE name:x$delegate type:kotlin.Lazy<kotlin.Int> flags:[val]
          CALL 'public final fun lazy <T> (initializer: kotlin.Function0<kotlin.lazy.T>): kotlin.Lazy<kotlin.lazy.T> flags:[] declared in kotlin' type=kotlin.Lazy<kotlin.Int> origin=null
            <T>: kotlin.Int
            initializer: BLOCK type=kotlin.Function0<kotlin.Int> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:kotlin.Int flags:[]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> <> (): kotlin.Int flags:[] declared in <root>.test1'
                    CONST Int type=kotlin.Int value=42
              FUNCTION_REFERENCE 'local final fun <anonymous> <> (): kotlin.Int flags:[] declared in <root>.test1' type=kotlin.Function0<kotlin.Int> origin=LAMBDA
        FUN DELEGATED_PROPERTY_ACCESSOR name:<get-x> visibility:local modality:FINAL <> () returnType:kotlin.Int flags:[]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test1'
              CALL 'public final fun getValue <T> (thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.getValue.T flags:[inline] declared in kotlin' type=kotlin.Int origin=null
                <T>: kotlin.Int
                $receiver: GET_VAR 'val x$delegate: kotlin.Lazy<kotlin.Int> flags:[val] declared in <root>.test1' type=kotlin.Lazy<kotlin.Int> origin=null
                thisRef: CONST Null type=kotlin.Nothing? value=null
                property: LOCAL_DELEGATED_PROPERTY_REFERENCE 'x: Int' delegate='val x$delegate: kotlin.Lazy<kotlin.Int> flags:[val] declared in <root>.test1' getter='local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test1' setter=null type=kotlin.reflect.KProperty0<kotlin.Int> origin=PROPERTY_REFERENCE_FOR_DELEGATE
      CALL 'public final fun println <> (message: kotlin.Int): kotlin.Unit flags:[inline] declared in kotlin.io' type=kotlin.Unit origin=null
        message: CALL 'local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test1' type=kotlin.Int origin=GET_LOCAL_PROPERTY
  FUN name:test2 visibility:public modality:FINAL <> () returnType:kotlin.Unit flags:[]
    BLOCK_BODY
      LOCAL_DELEGATED_PROPERTY name:x type:kotlin.Int flags:var
        VAR DELEGATE name:x$delegate type:java.util.HashMap<kotlin.String, kotlin.Int> flags:[val]
          CALL 'public final fun hashMapOf <K, V> (): java.util.HashMap<kotlin.collections.hashMapOf.K, kotlin.collections.hashMapOf.V> flags:[inline] declared in kotlin.collections' type=java.util.HashMap<kotlin.String, kotlin.Int> origin=null
            <K>: kotlin.String
            <V>: kotlin.Int
        FUN DELEGATED_PROPERTY_ACCESSOR name:<get-x> visibility:local modality:FINAL <> () returnType:kotlin.Int flags:[]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test2'
              CALL 'public final fun getValue <V, V1> (thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.collections.getValue.V1 flags:[inline] declared in kotlin.collections' type=kotlin.Int origin=null
                <V>: kotlin.Int
                <V1 : V>: kotlin.Int
                $receiver: GET_VAR 'val x$delegate: java.util.HashMap<kotlin.String, kotlin.Int> flags:[val] declared in <root>.test2' type=java.util.HashMap<kotlin.String, kotlin.Int> origin=null
                thisRef: CONST Null type=kotlin.Nothing? value=null
                property: LOCAL_DELEGATED_PROPERTY_REFERENCE 'x: Int' delegate='val x$delegate: java.util.HashMap<kotlin.String, kotlin.Int> flags:[val] declared in <root>.test2' getter='local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test2' setter='local final fun <set-x> <> (value: kotlin.Int): kotlin.Unit flags:[] declared in <root>.test2' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=PROPERTY_REFERENCE_FOR_DELEGATE
        FUN DELEGATED_PROPERTY_ACCESSOR name:<set-x> visibility:local modality:FINAL <> (value:kotlin.Int) returnType:kotlin.Unit flags:[]
          VALUE_PARAMETER name:value index:0 type:kotlin.Int flags:[]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='local final fun <set-x> <> (value: kotlin.Int): kotlin.Unit flags:[] declared in <root>.test2'
              CALL 'public final fun setValue <V> (thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>, value: kotlin.collections.setValue.V): kotlin.Unit flags:[inline] declared in kotlin.collections' type=kotlin.Unit origin=null
                <V>: kotlin.Int
                $receiver: GET_VAR 'val x$delegate: java.util.HashMap<kotlin.String, kotlin.Int> flags:[val] declared in <root>.test2' type=java.util.HashMap<kotlin.String, kotlin.Int> origin=null
                thisRef: CONST Null type=kotlin.Nothing? value=null
                property: LOCAL_DELEGATED_PROPERTY_REFERENCE 'x: Int' delegate='val x$delegate: java.util.HashMap<kotlin.String, kotlin.Int> flags:[val] declared in <root>.test2' getter='local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test2' setter='local final fun <set-x> <> (value: kotlin.Int): kotlin.Unit flags:[] declared in <root>.test2' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=PROPERTY_REFERENCE_FOR_DELEGATE
                value: GET_VAR 'value: kotlin.Int flags:[] declared in <root>.test2.<set-x>' type=kotlin.Int origin=null
      CALL 'local final fun <set-x> <> (value: kotlin.Int): kotlin.Unit flags:[] declared in <root>.test2' type=kotlin.Unit origin=EQ
        value: CONST Int type=kotlin.Int value=0
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public flags:[] superTypes:[kotlin.Any]
        BLOCK type=kotlin.Int origin=POSTFIX_INCR
          VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Int flags:[val]
            CALL 'local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test2' type=kotlin.Int origin=POSTFIX_INCR
          CALL 'local final fun <set-x> <> (value: kotlin.Int): kotlin.Unit flags:[] declared in <root>.test2' type=kotlin.Unit origin=POSTFIX_INCR
            value: CALL 'public final fun inc <> (): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=POSTFIX_INCR
              $this: GET_VAR 'val tmp0: kotlin.Int flags:[val] declared in <root>.test2' type=kotlin.Int origin=null
          GET_VAR 'val tmp0: kotlin.Int flags:[val] declared in <root>.test2' type=kotlin.Int origin=null
      CALL 'local final fun <set-x> <> (value: kotlin.Int): kotlin.Unit flags:[] declared in <root>.test2' type=kotlin.Unit origin=PLUSEQ
        value: CALL 'public final fun plus <> (other: kotlin.Int): kotlin.Int flags:[] declared in kotlin.Int' type=kotlin.Int origin=PLUSEQ
          $this: CALL 'local final fun <get-x> <> (): kotlin.Int flags:[] declared in <root>.test2' type=kotlin.Int origin=PLUSEQ
          other: CONST Int type=kotlin.Int value=1
