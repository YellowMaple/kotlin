FILE fqName:<root> fileName:/localDelegatedPropertiesWithAnnotations.kt
  CLASS ANNOTATION_CLASS name:A modality:FINAL visibility:public flags:[] superTypes:[kotlin.Annotation]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.A flags:[]
    CONSTRUCTOR visibility:public <> (x:kotlin.String) returnType:<root>.A flags:[primary]
      VALUE_PARAMETER name:x index:0 type:kotlin.String flags:[]
    PROPERTY name:x visibility:public modality:FINAL flags:[val]
      FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.String visibility:public flags:[final]
        EXPRESSION_BODY
          GET_VAR 'x: kotlin.String flags:[] declared in <root>.A.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:public modality:FINAL <> ($this:<root>.A) returnType:kotlin.String flags:[]
        correspondingProperty: PROPERTY name:x visibility:public modality:FINAL flags:[val]
        $this: VALUE_PARAMETER name:<this> type:<root>.A flags:[]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-x> <> (): kotlin.String flags:[] declared in <root>.A'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.String visibility:public flags:[final]' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.A flags:[] declared in <root>.A.<get-x>' type=<root>.A origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      overridden:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:[]
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      overridden:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      overridden:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
  FUN name:foo visibility:public modality:FINAL <> (m:kotlin.collections.Map<kotlin.String, kotlin.Int>) returnType:kotlin.Unit flags:[]
    VALUE_PARAMETER name:m index:0 type:kotlin.collections.Map<kotlin.String, kotlin.Int> flags:[]
    BLOCK_BODY
      LOCAL_DELEGATED_PROPERTY name:test type:kotlin.Int flags:val
        annotations:
          CALL 'public constructor <init> <> (x: kotlin.String) flags:[primary] declared in <root>.A' type=<root>.A origin=null
            x: CONST String type=kotlin.String value="foo/test"
        VAR DELEGATE name:test$delegate type:kotlin.Lazy<kotlin.Int> flags:[val]
          CALL 'public final fun lazy <T> (initializer: kotlin.Function0<kotlin.lazy.T>): kotlin.Lazy<kotlin.lazy.T> flags:[] declared in kotlin' type=kotlin.Lazy<kotlin.Int> origin=null
            <T>: kotlin.Int
            initializer: BLOCK type=kotlin.Function0<kotlin.Int> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:kotlin.Int flags:[]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> <> (): kotlin.Int flags:[] declared in <root>.foo'
                    CONST Int type=kotlin.Int value=42
              FUNCTION_REFERENCE 'local final fun <anonymous> <> (): kotlin.Int flags:[] declared in <root>.foo' type=kotlin.Function0<kotlin.Int> origin=LAMBDA
        FUN DELEGATED_PROPERTY_ACCESSOR name:<get-test> visibility:local modality:FINAL <> () returnType:kotlin.Int flags:[]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='local final fun <get-test> <> (): kotlin.Int flags:[] declared in <root>.foo'
              CALL 'public final fun getValue <T> (thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.getValue.T flags:[inline] declared in kotlin' type=kotlin.Int origin=null
                <T>: kotlin.Int
                $receiver: GET_VAR 'val test$delegate: kotlin.Lazy<kotlin.Int> flags:[val] declared in <root>.foo' type=kotlin.Lazy<kotlin.Int> origin=null
                thisRef: CONST Null type=kotlin.Nothing? value=null
                property: LOCAL_DELEGATED_PROPERTY_REFERENCE 'test: Int' delegate='val test$delegate: kotlin.Lazy<kotlin.Int> flags:[val] declared in <root>.foo' getter='local final fun <get-test> <> (): kotlin.Int flags:[] declared in <root>.foo' setter=null type=kotlin.reflect.KProperty0<kotlin.Int> origin=PROPERTY_REFERENCE_FOR_DELEGATE
